1) MVC 
model	view			controller
Модель	Представление	Контролер
Способ организации кода, когда вы храните не все вместе и как попало
А делите на блоки отвечающие каждый за свое
Модель - компонент содержит все, что касается данных
Представление - отвечает за внешний вид приложения и способы его использования
Контролер - содержит в себе связь между моделью и контроллером

2) RESTful api 
Способ взаимодействия и обмена данными сервера
Смысл этого способа в том, что Сервер передает Клиенту не html-страницу, а непосредственно данные, 
никак не влияя на то, как эти данные будут в итоге представлены.
Наиболее популярными форматами для передачи данных становятся XML и JSON
Сервер полностью избавляется от задачи отрисовки данных

3) ASCII 
Таблица кодировки символов, в которой каждой букве, числу или знаку соответствует определенное число.
Цифровое устройство по умолчанию не понимает символы — только числа. 
Поэтому буквы, цифры и знаки приходится кодировать, чтобы задавать компьютеру соответствие между определенным 
	начертанием и числовым значением. 
Сейчас вариантов кодирования несколько, и ASCII — одна из наиболее ранних кодировок

4) DDL 
Одна из групп операторов в языке SQL
Состоит из
CREATE – используется для создания объектов базы данных
ALTER – используется для изменения объектов базы данных
DROP – используется для удаления объектов базы данных

5) SOLID 
стандарт программирования широко используется в ООП
S	Один класс должен решать только какую-то одну задачу.
O	Классы должны  быть  открыты для расширения, но закрыты для модификации
L	Принцип подстановки Барбары Лисков (Необходимо, чтобы подклассы могли бы служить заменой для своих суперклассов)
I	Создавайте узкоспециализированные интерфейсы, предназначенные для конкретного клиента. 
	Клиенты не должны зависеть от интерфейсов, которые они не используют.
D	Модули верхнего уровня не должны зависеть от модулей нижнего уровня. 
	И те, и другие должны зависеть от абстракций. 
	Абстракции не должны зависеть от деталей. 
	Детали должны зависеть от абстракций.
	В процессе разработки программного обеспечения существует момент, когда функционал приложения перестаёт помещаться в рамках одного модуля. 
	Когда это происходит, нам приходится решать проблему зависимостей модулей. 
	В результате, например, может оказаться так, что высокоуровневые компоненты зависят от низкоуровневых компонентов.


6) DRY 
не повторяйся! не повторяй себя сам
Остальные принципы программирования тем или иным образом берут свои основы от этого основополагающего принципа. 
Остальные принципы программирования чаще всего являются методами, как реализовать принцип DRY. 
Это повторение, дублирование может происходить в двух местах: дублирование кода и дублирование данных

7) kiss
делайте вещи проще
простота кода – превыше всего, потому что простой код – наиболее понятный